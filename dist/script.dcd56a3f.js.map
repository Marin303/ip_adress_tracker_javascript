{"version":3,"sources":["script.js"],"names":["map","marker","circle","addressInfo","document","querySelector","locationInfo","timezoneInfo","ipsInfo","input","button","apiKey","fetchData","ipAddress","value","fetch","concat","then","response","json","data","provideInfo","updateMap","location","lat","lng","console","log","catch","err","error","innerHTML","ip","city","region","country","timezone","isp","initializeMap","L","setView","tileLayer","maxZoom","attribution","addTo","color","fillColor","fillOpacity","radius","setLatLng","addEventListener","e","key"],"mappings":";AAAA,IAMIA,EACAC,EACAC,EAREC,EAAcC,SAASC,cAAc,aACrCC,EAAeF,SAASC,cAAc,aACtCE,EAAeH,SAASC,cAAc,aACtCG,EAAUJ,SAASC,cAAc,QACjCI,EAAQL,SAASC,cAAc,SAC/BK,EAASN,SAASC,cAAc,UAIhCM,EAA4B,mCAWlC,SAASC,IAEP,IAAMC,EAAYJ,EAAMK,MACxBC,MAAKC,oDAAAA,OACiDL,EAAMK,eAAAA,OAAcH,IAEvEI,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACG,GACLC,EAAYD,GACZE,EAAUF,EAAKG,SAASC,IAAKJ,EAAKG,SAASE,KAC3CC,QAAQC,IAAIP,KAEbQ,MAAM,SAACC,GAAG,OAAKH,QAAQI,MAAMD,KAGlC,SAASR,EAAYD,GACnBjB,EAAY4B,UAASf,6BAAAA,OAAgCI,EAAKY,GAAQ,QAClE1B,EAAayB,UAASf,2BAAAA,OAA8BI,EAAKG,SAASU,KAAIjB,MAAAA,OAAKI,EAAKG,SAASW,OAAMlB,MAAAA,OAAKI,EAAKG,SAASY,QAAa,QAC/H5B,EAAawB,UAASf,4BAAAA,OAA+BI,EAAKG,SAASa,SAAc,QACjF5B,EAAQuB,UAASf,sBAAAA,OAAyBI,EAAKiB,IAAS,QAG1D,SAASC,EAAcd,EAAKC,GAC1BzB,EAAMuC,EAAEvC,IAAI,OAAOwC,QAAQ,CAAChB,EAAKC,GAAM,IACvCc,EAAEE,UAAU,iDAAkD,CAC5DC,QAAS,GACTC,YACE,8EACDC,MAAM5C,GACTC,EAASsC,EAAEtC,OAAO,CAACuB,EAAKC,IAAMmB,MAAM5C,GACpCE,EAASqC,EAAErC,OAAO,CAACsB,EAAKC,GAAM,CAC5BoB,MAAO,MACPC,UAAW,OACXC,YAAa,GACbC,OAAQ,MACPJ,MAAM5C,GAGX,SAASsB,EAAUE,EAAKC,GACtBxB,EAAOgD,UAAU,CAACzB,EAAKC,IACvBvB,EAAO+C,UAAU,CAACzB,EAAKC,IACvBzB,EAAIwC,QAAQ,CAAChB,EAAKC,GAAM,IAnD1Ba,EAAc,MAAO,OAErB5B,EAAOwC,iBAAiB,QAAStC,GACjCH,EAAMyC,iBAAiB,UAAW,SAACC,GACnB,UAAVA,EAAEC,MACJxC,IACAH,EAAMK,MAAQ","file":"script.dcd56a3f.js","sourceRoot":"..","sourcesContent":["const addressInfo = document.querySelector(\".ipAdress\");\r\nconst locationInfo = document.querySelector(\".location\");\r\nconst timezoneInfo = document.querySelector(\".timezone\");\r\nconst ipsInfo = document.querySelector(\".ips\");\r\nconst input = document.querySelector(\"input\");\r\nconst button = document.querySelector(\"button\");\r\nlet map;\r\nlet marker;\r\nlet circle;\r\nconst apiKey = process.env.API_KEY;\r\ninitializeMap(45.81, 15.98);\r\n\r\nbutton.addEventListener(\"click\", fetchData);\r\ninput.addEventListener(\"keydown\", (e) => {\r\n  if (e.key === \"Enter\") {\r\n    fetchData();\r\n    input.value = \"\";\r\n  }\r\n});\r\n\r\nfunction fetchData() {\r\n \r\n  const ipAddress = input.value;\r\n  fetch(\r\n    `https://geo.ipify.org/api/v2/country,city?apiKey=${apiKey}&ipAddress=${ipAddress}`\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      provideInfo(data);\r\n      updateMap(data.location.lat, data.location.lng);\r\n      console.log(data);\r\n    })\r\n    .catch((err) => console.error(err));\r\n}\r\n\r\nfunction provideInfo(data) {\r\n  addressInfo.innerHTML = `<span>IP ADDRESS</span><p>${data.ip}</p>`;\r\n  locationInfo.innerHTML = `<span>LOCATION</span><p>${data.location.city}, ${data.location.region}, ${data.location.country}</p>`;\r\n  timezoneInfo.innerHTML = `<span>TIMEZONE</span> <p>${data.location.timezone}</p>`;\r\n  ipsInfo.innerHTML = `<span>ISP</span><p>${data.isp}</p>`;\r\n}\r\n\r\nfunction initializeMap(lat, lng) {\r\n  map = L.map(\"map\").setView([lat, lng], 13);\r\n  L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n    maxZoom: 19,\r\n    attribution:\r\n      '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n  }).addTo(map);\r\n  marker = L.marker([lat, lng]).addTo(map);\r\n  circle = L.circle([lat, lng], {\r\n    color: \"red\",\r\n    fillColor: \"#f03\",\r\n    fillOpacity: 0.5,\r\n    radius: 500,\r\n  }).addTo(map);\r\n}\r\n\r\nfunction updateMap(lat, lng) {\r\n  marker.setLatLng([lat, lng]);\r\n  circle.setLatLng([lat, lng]);\r\n  map.setView([lat, lng], 13);\r\n}\r\n\r\n/*circle should have diffrent value than lat,lng*/\r\n"]}