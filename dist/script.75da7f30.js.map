{"version":3,"sources":["script.js"],"names":["addressInfo","document","querySelector","locationInfo","timezoneInfo","ipsInfo","input","button","map","marker","circle","apiKey","initializeMap","addEventListener","fetchData","e","key","value","ipAddress","fetch","concat","then","response","json","data","provideInfo","updateMap","location","lat","lng","console","log","catch","err","error","innerHTML","ip","city","region","country","timezone","isp","L","setView","tileLayer","maxZoom","attribution","addTo","color","fillColor","fillOpacity","radius","setLatLng"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["const addressInfo = document.querySelector(\".ipAdress\");\r\nconst locationInfo = document.querySelector(\".location\");\r\nconst timezoneInfo = document.querySelector(\".timezone\");\r\nconst ipsInfo = document.querySelector(\".ips\");\r\nconst input = document.querySelector(\"input\");\r\nconst button = document.querySelector(\"button\");\r\nlet map;\r\nlet marker;\r\nlet circle;\r\nconst apiKey = process.env.API_KEY;\r\n\r\ninitializeMap(45.81, 15.98);\r\n\r\nbutton.addEventListener(\"click\", fetchData);\r\ninput.addEventListener(\"keydown\", (e) => {\r\n  if (e.key === \"Enter\") {\r\n    fetchData();\r\n    input.value = \"\";\r\n  }\r\n});\r\n\r\nfunction fetchData() {\r\n  const ipAddress = input.value;\r\n  fetch(\r\n    `https://geo.ipify.org/api/v2/country,city?apiKey=${apiKey}&ipAddress=${ipAddress}`\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      provideInfo(data);\r\n      updateMap(data.location.lat, data.location.lng);\r\n      console.log(data);\r\n    })\r\n    .catch((err) => console.error(err));\r\n}\r\n\r\nfunction provideInfo(data) {\r\n  addressInfo.innerHTML = `<span>IP ADDRESS</span><p>${data.ip}</p>`;\r\n  locationInfo.innerHTML = `<span>LOCATION</span><p>${data.location.city}, ${data.location.region}, ${data.location.country}</p>`;\r\n  timezoneInfo.innerHTML = `<span>TIMEZONE</span> <p>${data.location.timezone}</p>`;\r\n  ipsInfo.innerHTML = `<span>ISP</span><p>${data.isp}</p>`;\r\n}\r\n\r\nfunction initializeMap(lat, lng) {\r\n  map = L.map(\"map\").setView([lat, lng], 13);\r\n  L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n    maxZoom: 19,\r\n    attribution:\r\n      '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n  }).addTo(map);\r\n  marker = L.marker([lat, lng]).addTo(map);\r\n  circle = L.circle([lat, lng], {\r\n    color: \"red\",\r\n    fillColor: \"#f03\",\r\n    fillOpacity: 0.5,\r\n    radius: 500,\r\n  }).addTo(map);\r\n}\r\n\r\nfunction updateMap(lat, lng) {\r\n  marker.setLatLng([lat, lng]);\r\n  circle.setLatLng([lat, lng]);\r\n  map.setView([lat, lng], 13);\r\n}\r\n\r\n/*circle should have diffrent value than lat,lng*/\r\n"]}